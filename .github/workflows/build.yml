name: Build test
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build-llvm-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - clang-version: main
          - clang-version: release/18.x
          - clang-version: release/19.x
          - clang-version: release20.x
    runs-on: ubuntu-22.04-arm
    steps:
    - uses: rokibhasansagar/slimhub_actions@main
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: bash ci.sh deps
    - name: Build LLVM 
      run: ./build-llvm.py --show-build-commands --vendor-string Pdx --targets ARM AArch64 --projects clang lld libc --no-update --ref ${{ matrix.clang-version }} -i android-kernel-toolchain-latest/clang
    - run: sudo tree android-kernel-toolchain-latest
#    - name: Build Binutils
#      run: ./build-binutils.py --targets arm-linux-gnueabi aarch64-linux-gnu -i android-kernel-toolchain-latest
#    - run: sudo tree android-kernel-toolchain-latest
#      continue-on-error: true
#    - name: link
#      continue-on-error: true
#      run: |
#        cd android-kernel-toolchain-latest
#        mv -v aarch64-linux-gnu aarch64-linux-android
#        mv -v arm-linux-gnueabi arm-linux-androidabei
#        cd aarch64-linux-android/bin #       for file in $(ls *); do
#            ln -sf -v  "aarch64-linux-android-${file-}" "$file"
#        done
#        cd ../../arm-linux-androidabei/bin
#        for file in $(ls *); do
#            ln -sf -v "arm-linux-androideabi-${file-}" "$file"
#        done
    - name: upload
      if: github.event_name != 'push'
      env:
       clang-version: ${{ matrix.clang-version }}
      uses: actions/upload-artifact@v4
      with:
        name: akt_${{ env.clang-version }}_${{ env.date }}
        path: android-kernel-toolchain-latest/*


  build-gcc-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: arm
          - arch: arm64
    runs-on: ubuntu-22.04-arm
    container: fedora:latest
    steps:
#    - uses: rokibhasansagar/slimhub_actions@main
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo dnf update && sudo dnf groupinstall "Development tools" -y
        sudo dnf install git mpfr-devel gmp-devel libmpc-devel texinfo zlib-devel glibc-devel binutils-devel g++ texinfo bison wget flex cmake which ninja-build clang lld bzip2 binutils-arm-linux-gnu binutils-aarch64-linux-gnu tree awk file -y

    - name: Build gcc
      run: |
        wget https://github.com/mvaisakh/gcc-build/raw/main/build-gcc.sh
        bash -x build-gcc.sh -a ${{ matrix.arch }}
    - name: cat 
      run: sudo tree gcc-${{ matrix.arch }}
      
    - name: upload
      if: github.event_name != 'push'
      env:
       clang-version: ${{ matrix.arch }}
      uses: actions/upload-artifact@v4
      with:
        name: akt_${{ env.arch }}_${{ env.date }}
        path: gcc-${{ env.arch }}/*      
      
